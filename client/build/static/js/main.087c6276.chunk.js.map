{"version":3,"sources":["components/loading/LoadingMask.module.scss","pages/Home.module.scss","store/actions/user.js","components/loading/LoadingMask.jsx","components/profile/Profile.jsx","pages/Home.jsx","store/actions/ui.js","App.js","serviceWorker.js","store/reducers/user.js","store/reducers/ui.js","store/reducers/index.js","index.js"],"names":["module","exports","container","logo","rotateClockwise","button","fetchUserSuccess","users","type","LoadingMask","react_default","a","createElement","className","styles","Profile","_this$props$details","this","props","details","email","name","picture","first","last","src","large","alt","React","PureComponent","HomePage","state","count","_onFetchUserHandler","_this","fetchUsers","_onCountChangeHandler","e","setState","target","value","map","user","profile_Profile","key","loading","loading_LoadingMask","onChange","onClick","connect","ui","dispatch","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","params","sent","data","t0","stop","_x","apply","arguments","App","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","defaultState","combineReducers","length","undefined","action","objectSpread","toConsumableArray","store","createStore","reducers","applyMiddleware","reduxThunk","defaults","baseURL","ReactDOM","render","BrowserRouter","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.087c6276.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingMask_container__1XgIA\",\"logo\":\"LoadingMask_logo__BHgH9\",\"rotateClockwise\":\"LoadingMask_rotateClockwise__1L5uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1nxNb\",\"button\":\"Home_button__e8IJf\"};","import { onLoadingStart, onLoadingEnd } from './ui';\nimport axios from 'axios';\n\nexport const FETCH_USER_START = 'FETCH_USER_START';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\n\nexport const fetchUserSuccess = (users) => ({\n  type: FETCH_USER_SUCCESS,\n  users,\n});\n\nexport const fetchUserFail = () => ({\n  type: FETCH_USER_FAIL,\n});\n\nexport const fetchUsers = (count) => async (dispatch) => {\n  dispatch(onLoadingStart());\n  try {\n    const users = await axios.get(`https://built-users.herokuapp.com/users`, {\n      params: {\n        count\n      }\n    })\n\n    dispatch(fetchUserSuccess(users.data))\n  } catch (e) {\n    dispatch(fetchUserFail())\n  }\n  dispatch(onLoadingEnd());\n};\n","import React from 'react';\nimport styles from './LoadingMask.module.scss';\n\nconst LoadingMask = () => (\n  <div className={styles.container}>\n    <p className={styles.logo}>Loading</p>\n  </div>\n);\n\nexport default LoadingMask;\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nclass Profile extends React.PureComponent {\r\n  render() {\r\n    const {email, name, picture} = this.props.details\r\n    return (\r\n      <div className={styles.container}>\r\n        <p>Name: {name.first} {name.last}</p>\r\n        <p>Email: {email}</p>\r\n        <img src={picture.large} alt=\"profile\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUsers } from '../store/actions/user';\r\nimport Loading from '../components/loading/LoadingMask';\r\nimport Profile from '../components/profile/Profile';\r\nimport styles from './Home.module.scss';\r\n\r\nclass HomePage extends React.PureComponent {\r\n  state = {\r\n    count: 1\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._onFetchUserHandler()\r\n  }\r\n\r\n  _onFetchUserHandler = () => {\r\n    const {count} = this.state\r\n    this.props.fetchUsers(count ? count : 1)\r\n  }\r\n\r\n  _onCountChangeHandler = (e) => {\r\n    this.setState({\r\n      count: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const users = this.props.users.map(user => <Profile key={user.email} details={user} />)\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        {this.props.loading ? <Loading /> : null}\r\n        <h1>Test Users</h1>\r\n        {users}\r\n        <input type=\"text\" value={this.state.count} onChange={this._onCountChangeHandler} />\r\n        <button className={styles.button} onClick={this._onFetchUserHandler}>Button</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.user.users,\r\n  loading: state.ui.loading\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchUsers: count => dispatch(fetchUsers(count))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","export const ON_LOADING_START = 'ON_LOADING_START';\r\nexport const ON_LOADING_END = 'ON_LOADING_END';\r\n\r\nexport const onLoadingStart = () => ({\r\n  type: ON_LOADING_START,\r\n});\r\n\r\nexport const onLoadingEnd = () => ({\r\n  type: ON_LOADING_END,\r\n});\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/Home';\n\nconst App = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/resume\" component={HomePage} />\n    </Switch>\n  </main>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_USER_SUCCESS } from '../actions/user';\n\n// type User = {\n//   name: String,\n//   city: String,\n//   state: String,\n//   picture: String\n// }\n\nconst defaultState = {\n  users: []\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case FETCH_USER_SUCCESS:\n      return {\n        ...state,\n        users: [...action.users],\n      };\n    default:\n      return state;\n  }\n};\n","import { ON_LOADING_END, ON_LOADING_START } from '../actions/ui';\n\nconst defaultState = {\n  loading: false,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case ON_LOADING_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ON_LOADING_END:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport ui from './ui';\r\n\r\nexport default combineReducers({\r\n  user,\r\n  ui\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App';\nimport 'normalize.css';\nimport './assets/styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducers from './store/reducers/index';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  // dev code\n  axios.defaults.baseURL = 'http://localhost:3001';\n} else {\n  axios.defaults.baseURL = 'https://built-users.herokuapp.com/';\n  // production code\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n"],"sourceRoot":""}